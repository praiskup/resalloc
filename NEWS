~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

New in 3.5:

* New features:

  - Many new DB indexes were installed to perform fluently on very
    large ticket/resource sets.

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

New in 3.4:

* New features:

  - The 'resalloc-maint' command got a new sub-command 'foreach-resource'
    that can be used for programatic way of executing commands for each
    running resource.

* Bugfixes:

  - We fixed a bug in calculation of "preallocated" resources; previously
    released resources were counted as free-to-use by anyone - thus also
    pre-allocated.  But these are not useable by anyone, and shouldn't be
    taken as preallocated.

  - We re-added the "host" config option, which is just for backward
    compatibility.  Users still should use 'hostname' preferably.

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

New in 3.3:

* Bugfixes:

  - Large stdout output from `cmd_new` command is properly trimmed, without
    traceback and leftover always-STARTING instance.

  - Better (fixed) logging from AllocWorker.

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

New in 3.2:

* Enhancements:

  - Configurable command `cmd_release` to be run before we mark the
    resource as reusable again.

  - After server restart, schedule all inconsistent resources to be
    terminated.  (mitigates issue#41)

  - Systemd serrver service is restarted upon failure (just in case).

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

New in 3.1:

* Enhancements:

  - Resource Watcher thread doesn't directly terminate resources, but only
    checks periodically for liveness.  The termination task is given to
    Manager thread to avoid races.

  - The Watcher thread has a new environment variable
    RESALLOC_RESOURCE_DATA with base64 encoded output from 'cmd_new'.

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

New in 3.0:

* New features:

  - Resource "re-using" mechanism was added.  Resources are newly put to
    sandboxes (per ticket sandbox flag), and when the resource is released
    from ticket the resource can be assigned to other (subsequent) ticket
    with the same sandbox flag.

  - Python API; The resalloc.client.Connection constructor now accepts
    'request_survives_server_restart'.  When set to True (default False),
    each XML request network failure is ignored and the request is retried
    till it succeeds.  This allows administrator to do resalloc server
    maintenance, restart it and clients survive without noticing.

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
